{
    "name": "Vaultlending",
    "structs": {},
    "methods": [
        {
            "name": "set_vault_asset",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Admin chooses which ASA (like USDC) the vault uses.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "whitelist_account",
            "args": [
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "bool",
                    "name": "allowed"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Admin whitelists an account for withdraw/borrow.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "deposit_algo",
            "args": [
                {
                    "type": "pay",
                    "name": "payment"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Deposit ALGO into vault.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "deposit_asset",
            "args": [
                {
                    "type": "axfer",
                    "name": "asset_txn"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Deposit USDC (or ASA) into vault.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "withdraw_algo",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Withdraw ALGO from vault (only if whitelisted).",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "withdraw_asset",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Withdraw USDC/ASA from vault (only if whitelisted).",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "borrow_to_merchant",
            "args": [
                {
                    "type": "address",
                    "name": "merchant"
                },
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Credit officer borrows from vault and transfers to merchant.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "repay_loan",
            "args": [
                {
                    "type": "axfer",
                    "name": "asset_txn"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Borrower repays loan in vault asset (e.g., USDC).",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_balance",
            "args": [
                {
                    "type": "address",
                    "name": "account"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "desc": "Return combined ALGO + asset balance.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Simple test method.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "vault_asset": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dmF1bHRfYXNzZXQ="
                },
                "admin": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "YWRtaW4="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "algo_deposits": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": "YWxnb19kZXBvc2l0cw=="
                },
                "asset_deposits": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": "YXNzZXRfZGVwb3NpdHM="
                },
                "whitelist": {
                    "keyType": "address",
                    "valueType": "bool",
                    "prefix": "d2hpdGVsaXN0"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        532
                    ],
                    "errorMessage": "CREDIT_OFFICER_NOT_WHITELISTED"
                },
                {
                    "pc": [
                        403,
                        468
                    ],
                    "errorMessage": "INSUFFICIENT_BALANCE"
                },
                {
                    "pc": [
                        340,
                        611
                    ],
                    "errorMessage": "INVALID_ASSET"
                },
                {
                    "pc": [
                        544
                    ],
                    "errorMessage": "MERCHANT_NOT_WHITELISTED"
                },
                {
                    "pc": [
                        201,
                        232
                    ],
                    "errorMessage": "NOT_ADMIN"
                },
                {
                    "pc": [
                        385,
                        451
                    ],
                    "errorMessage": "NOT_WHITELISTED"
                },
                {
                    "pc": [
                        94
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        183
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        264,
                        331
                    ],
                    "errorMessage": "SENDER_MISMATCH"
                },
                {
                    "pc": [
                        561
                    ],
                    "errorMessage": "VAULT_EMPTY"
                },
                {
                    "pc": [
                        257,
                        324,
                        618
                    ],
                    "errorMessage": "WRONG_RECEIVER"
                },
                {
                    "pc": [
                        199,
                        230
                    ],
                    "errorMessage": "check self.admin exists"
                },
                {
                    "pc": [
                        338,
                        484,
                        577,
                        609
                    ],
                    "errorMessage": "check self.vault_asset exists"
                },
                {
                    "pc": [
                        700
                    ],
                    "errorMessage": "invalid number of bytes for (len+utf8[])"
                },
                {
                    "pc": [
                        223
                    ],
                    "errorMessage": "invalid number of bytes for bool8"
                },
                {
                    "pc": [
                        191,
                        373,
                        439,
                        520
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        215,
                        512,
                        652
                    ],
                    "errorMessage": "invalid number of bytes for uint8[32]"
                },
                {
                    "pc": [
                        317,
                        602
                    ],
                    "errorMessage": "transaction type is axfer"
                },
                {
                    "pc": [
                        250
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAAEIBCYHDmFzc2V0X2RlcG9zaXRzAQALdmF1bHRfYXNzZXQJd2hpdGVsaXN0DWFsZ29fZGVwb3NpdHMFYWRtaW4EFR98dTEYQAAIKiJnJwUyCWcxG0EAVTEZFEQxGESCCgTf1fahBPlEY8cENd1SlwRdrabNBNpbuLIEEFC0UAQj8L0CBHZNoeEE5dCvHwQCvs4RNhoAjgoACQAgAEIAhQC/AQEBSQGiAdUCAAAxGRQxGBQQQzYaAUkVJBJEFzEAIicFZUQSRCpMZyNDNhoBSRWBIBJENhoCSRUjEkQxACInBWVEEkQrTwJQTL8jQzEWIwlJOBAjEkRJOAcyChJESTgAMQASRLEyCkw4CEmyCEyyByOyECKyAbMnBDEAUL5MFyJMTwJNCCcEMQBQTBa/I0MxFiMJSTgQJRJESTgUMgoSREk4ADEAEkRJOBEiKmVEEkQoMQBQvkwXIkxPAk1MOBIIKDEAUEwWvyNDNhoBSRUkEkQrMQBQvilOAk0pE0QnBDEAUL5MFyJMTwJNTBdKD0RMSwEJJwQxAFBMFr+xMQCyB7III7IQIrIBsyNDNhoBSRUkEkQrMQBQvilOAk0pE0QoMQBQvkwXIkxPAk1MF0oPRExLAQkoMQBQTBa/sSIqZUQxAE8CshKyFLIRJbIQIrIBsyNDNhoBSRWBIBJENhoCSRUkEkQrMQBQvilOAk0pE0QrSwJQvilOAk0pE0QoMgpQvkwXIkxPAk1MF0oPRExLAQkoMgpQTBa/sSIqZUSyEbISshQlshAisgGzI0MxFiMJSTgQJRJESTgRIiplRBJESTgUMgoSRCgxAFC+TBciTE8CTUw4EggoMQBQTBa/I0M2GgFJFYEgEkQnBEsBUL5MFyJMTwJNKE8CUL5MFyJMTwJNCBYnBkxQsCNDNhoBSSJZgQIISwEVEkRXAgCAB0hlbGxvLCBMUEkVFlcGAkxQJwZMULAjQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}